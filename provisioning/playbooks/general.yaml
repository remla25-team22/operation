- hosts: all
  become: yes
  tasks:
    - name: Check if swap is enabled
      ansible.builtin.shell: swapon --summary | grep -q .
      register: swap_status
      ignore_errors: yes
      changed_when: false

    - name: Disable swap if it is enabled
      ansible.builtin.shell: swapoff -a
      when: swap_status.rc == 0

    - name: Remove swap from /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        state: absent

    - name: Load required kernel modules for future reboots
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules now
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

    - name: Apply sysctl settings
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'net.ipv4.ip_forward', value: 1 }
        - { name: 'net.bridge.bridge-nf-call-iptables', value: 1 }
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: 1 }

    - name: Register student SSH keys
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', item) }}"
      with_fileglob:
        - "../ssh_keys/*.pub"

    - name: Generate /etc/hosts from template
      template:
        src: ../templates/hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: '0644'

    - name: Add kubernetes signing key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
        state: present
    
    - name: Add Kubernetes apt repository source
      ansible.builtin.apt_repository:
        repo: deb https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
        filename: kubernetes
        state: present
  
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
    
    - name: Install packages
      ansible.builtin.apt:
        name:
          - containerd=1.7.24-0ubuntu1~24.04.2
          - runc=1.1.12-0ubuntu3
          - kubelet=1.32.4-1.1
          - kubeadm=1.32.4-1.1
          - kubectl=1.32.4-1.1
          - python3-kubernetes=22.6.0-2
        state: present

    - name: "Create a directory for containerd config"
      file: 
        path: /etc/containerd 
        state: directory

    - name: Generate default containerd config
      ansible.builtin.command: containerd config default
      args:
        creates: /etc/containerd/config.toml
      register: containerd_default_config

    - name: Write default containerd config to file
      copy:
        content: "{{ containerd_default_config.stdout }}"
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '0644'
      when: containerd_default_config is defined
            
    - name: Set containerd lines 
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
      - regexp: '(^\s*disable_apparmor\s*=\s*)(?!true\b)(\S+)'
        replace: '\1true'
      - regexp: '(^\s*sandbox_image\s*=\s*)(?!"registry\.k8s\.io\/pause:3\.10")(\S+)'
        replace: '\1"registry.k8s.io/pause:3.10"'
      - regexp: '(^\s*SystemdCgroup\s*=\s*)(?!true\b)(\S+)'
        replace: '\1true'
      
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: yes
    
    - name: Start kubelet
      ansible.builtin.service:
        name: kubelet
        state: started
        enabled: yes
    
