name: Auto Tag, Release, and Bump (with PR)

on:
  push:
    branches:
      - main

jobs:
  tag_and_bump:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Read current version from VERSION.txt
        id: version
        run: |
          VERSION=$(cat VERSION.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Current version: $VERSION"

          # Check if tag already exists
          if git ls-remote --tags origin | grep -q "refs/tags/$VERSION"; then
            echo "Tag $VERSION already exists. Skipping."
            exit 0
          fi

          # Create and push tag
          git tag $VERSION
          git push origin $VERSION
          
      - name: Tag the current version (if not already tagged)
        run: |
          VERSION=$(cat VERSION.txt)
          echo "Current version is: $VERSION"

          if git rev-parse "refs/tags/$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists. Skipping tagging."
            exit 0
          fi

          git tag $VERSION
          git push origin $VERSION

      - name: Bump to next patch version
        run: |
          VERSION=$(cat VERSION.txt)
          IFS='.' read -r MAJOR MINOR PATCH <<< "${VERSION#v}"
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="v${MAJOR}.${MINOR}.${NEXT_PATCH}"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "$NEXT_VERSION" > VERSION.txt

      - name: Push version bump to a new branch
        run: |
          VERSION=$(cat VERSION.txt)
          IFS='.' read -r MAJOR MINOR PATCH <<< "${VERSION#v}"
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="v${MAJOR}.${MINOR}.${NEXT_PATCH}"

          echo "$NEXT_VERSION" > VERSION.txt

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git checkout -b version-bump
          git add VERSION.txt
          git commit -m "Bump version to $NEXT_VERSION after release $VERSION"
          git push --force origin version-bump
